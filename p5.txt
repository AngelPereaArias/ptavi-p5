 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura?
        954 Paquetes.
        
 ** ¿Cuánto tiempo dura la captura?
        56.149345 Segundos.
        
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
        IP = 192.168.1.34, como podemos observar la IP está en el rango 192.168.0.0 a 192.168.255.255, por lo tanto será una IP privada. Se utiliza para identificar equipos o dispositivos dentro de una red doméstica o privada.


3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
        El protocolo más utilizado será User Datagram Protocol(UDP) con el 96,2% de los paquetes totales y un 98.9% de los bits totales de tráfico.
        
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
        "Protocol"                              ,"Percent Packets"
        
        "Ethernet"                              ,100
        "Internet Protocol Version 4"           ,98.95178197064989
        "User Datagram Protocol"                ,96.226415094339629
        "Simple Traversal of UDP Through NAT"   ,5.1362683438155132
        "Session Initiation Protocol"           ,2.6205450733752622
        "Real-Time Transport Protocol"          ,84.591194968553452
        "ITU-T Recommendation H.261"            ,20.545073375262053
        "Real-time Transport Control Protocol"  ,0.20964360587002095
        "Real-time Transport Control Protocol"  ,0.20964360587002095
        "Domain Name System"                    ,2.9350104821802936
        "Data"                                  ,0.10482180293501048
        "Transmission Control Protocol"         ,2.09643605870020982
        "Hypertext Transfer Protocol"           ,0.419287211740041918
        "Line-based text data"                  ,0.20964360587002095
        "Internet Control Message Protocol"     ,0.62893081761006286
        "Address Resolution Protocol"           ,1.0482180293501049



4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
 
         "46","7.343770","192.168.1.34","86.64.162.35","SIP","523","Request: REGISTER sip:ekiga.net  (1 binding) | "
         "50","7.425202","86.64.162.35","192.168.1.34","SIP","714","Status: 401 Unauthorized | "
         "51","7.427990","192.168.1.34","86.64.162.35","SIP","712","Request: REGISTER sip:ekiga.net  (1 binding) | "
         "54","7.512211","86.64.162.35","192.168.1.34","SIP","664","Status: 200 OK  (1 binding) | "
         "56","7.567714","192.168.1.34","86.64.162.35","SIP","598","Request: SUBSCRIBE sip:grex@ekiga.net | "
         "57","7.648107","86.64.162.35","192.168.1.34","SIP","641","Status: 489 Unsupported event package | "
         "84","14.426793","192.168.1.34","86.64.162.35","SIP/SDP","982","Request: INVITE sip:500@ekiga.net | "
         "85","14.599871","86.64.162.35","192.168.1.34","SIP","744","Status: 407 Proxy Authentication Required | "
         "86","14.610573","192.168.1.34","86.64.162.35","SIP","483","Request: ACK sip:500@ekiga.net | "
         "103","16.233522","192.168.1.34","86.64.162.35","SIP/SDP","1181","Request: INVITE sip:500@ekiga.net | "
         "104","16.334756","86.64.162.35","192.168.1.34","SIP","615","Status: 100 trying -- your call is important to us | "
         "105","16.343704","86.64.162.35","192.168.1.34","SIP/SDP","883","Status: 200 OK | "
         "110","16.460741","192.168.1.34","86.64.162.35","SIP","799","Request: ACK sip:500@86.64.162.35:5080 | "
         "924","38.119195","192.168.1.34","86.64.162.35","SIP","799","Request: BYE sip:500@86.64.162.35:5080 | "
         "925","38.362649","192.168.1.34","86.64.162.35","SIP","799","Request: BYE sip:500@86.64.162.35:5080 | "
         "927","38.362673","192.168.1.34","86.64.162.35","SIP","799","Request: BYE sip:500@86.64.162.35:5080 | "
         "933","38.937875","192.168.1.34","86.64.162.35","SIP","799","Request: BYE sip:500@86.64.162.35:5080 | "
         "938","39.154151","86.64.162.35","192.168.1.34","SIP","581","Status: 200 OK | "
         "939","39.178064","86.64.162.35","192.168.1.34","SIP","581","Status: 200 OK | "
         "940","39.204022","86.64.162.35","192.168.1.34","SIP","581","Status: 200 OK | "
         "941","39.229683","86.64.162.35","192.168.1.34","SIP","581","Status: 200 OK | "
         "950","55.694378","192.168.1.34","86.64.162.35","SIP","520","Request: REGISTER sip:ekiga.net  (remove 1 binding) | "
         "951","55.774638","86.64.162.35","192.168.1.34","SIP","714","Status: 401 Unauthorized | "
         "952","55.776662","192.168.1.34","86.64.162.35","SIP","709","Request: REGISTER sip:ekiga.net  (remove 1 binding) | "
         "953","55.859934","86.64.162.35","192.168.1.34","SIP","598","Status: 200 OK  (0 bindings) | "
         
 ** Y los paquetes con RTP, ¿cuándo se envían?
        Los paquetes RTP se envian desde el segundo 17 hasta el segundo 38. RTP es un Protocolo el cual se complementa con varios otro Protocolos como lo son SIP. El protocolo RTP (Real-time  Transport Protocol) es portador del contenido de voz y vídeo que intercambian los participantes en una sesión establecida por SIP.



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
        Las tramas son las siguientes:
         "1","0.000000","192.168.1.34","80.58.61.250","DNS","69","Standard query 0xf0f7 A ekiga.net"
         "2","0.044785","80.58.61.250","192.168.1.34","DNS","85","Standard query response 0xf0f7 A ekiga.net A 86.64.162.35"
         "3","0.045329","192.168.1.34","80.58.61.250","DNS","85","Standard query 0x32c3 PTR 35.162.64.86.in-addr.arpa"
         "4","0.121230","80.58.61.250","192.168.1.34","DNS","142","Standard query response 0x32c3 No such name PTR 35.162.64.86.in-addr.arpa SOA dns1.gaoland.net"
 
 ** ¿Qué servicio es el utilizado en estas tramas?
        Utilizará el protocolo Domain Name Service(DNS) para obtener la dirección IP a partir del nombre del dominio.
        
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
        IP = 80.58.61.250.

 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
        IP = 86.64.162.35.

 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
        Es la IP anterior invertida, para ver si desde la IP recibida obtienes el mismo nombre de dominio que se pidió inicialmente.

6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
        http.request.full_uri == "http://ekiga.net/ip/"
        
        Esta es la trama en la que se realiza la petición:
        "8","0.185961","192.168.1.34","86.64.162.35","HTTP","205","GET /ip/ HTTP/1.1 "
 
 ** ¿Qué user agent (UA) la está pidiendo?
        http.user_agent == "Ekiga"
        
        Esta es la trama en la que se realiza la petición:
        "8","0.185961","192.168.1.34","86.64.162.35","HTTP","205","GET /ip/ HTTP/1.1 "
        
 ** ¿Qué devuelve el servidor?
        Obtendrá la dirección IP pública = 83.36.48.212.
        
        Esta es la trama que devuelve el servidor:
        "10","0.259448","86.64.162.35","192.168.1.34","HTTP","350","HTTP/1.1 200 OK  (text/html)"
        
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
        IP = 212.128.254.136 
        Obtendremos la dirección IP publica de la maquina.


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
        STUN es usado principalmente por teléfonos o software VoIP. Éste incorpora un cliente STUN que envía una petición a un servidor STUN. El servidor STUN informa entonces al cliente de la IP pública de este último y qué puerto ha sido abierto por NAT para permitir el tráfico entrante a la red del cliente.
        
 ** ¿Estamos tras un NAT?
        Si, en el contenido de ese paquete se nos especifica (Traversal of UDP through NAT).

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
        IP = 86.64.162.35
        
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
        Dst Port = 5060 (5060)
        
 ** ¿Qué método SIP utiliza el UA para registrarse?
        User-Agent: Ekiga/2.0.3
        
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
        Allow: INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
        No, necesita autorización.
        Paquete = "50","7.425202","86.64.162.35","192.168.1.34","SIP","714","Status: 401 Unauthorized | " 
 
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
        El servidor enviará un "Status: 200 OK"
        Paquete = "54","7.512211","86.64.162.35","192.168.1.34","SIP","664","Status: 200 OK  (1 binding) | "
        
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
        1º Paquete = "46","7.343770","192.168.1.34","86.64.162.35","SIP","523","Request: REGISTER sip:ekiga.net  (1 binding) | "
        2º Paquete = "51","7.427990","192.168.1.34","86.64.162.35","SIP","712","Request: REGISTER sip:ekiga.net  (1 binding) | "
        
        El segundo paquete contiene el campo "Authoritation"
        Digest username="grex", realm="ekiga.net", nonce="45a439ee7438aaea43ae8c7c2382922187f86c8b", uri="sip:ekiga.net", algorithm=md5, response="5267d4e49d707d4443baefa913e8ff90"
        
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
        Expires: 3600 segundos

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
        Paquete = "84","14.426793","192.168.1.34","86.64.162.35","SIP/SDP","982","Request: INVITE sip:500@ekiga.net | "
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
        SIP from address: sip:grex@ekiga.net
        SIP Display info: "Gregorio Robles"
        
 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
        Características sobre las que se realizará la comunicación multimedia. Está en protocolo SDP.
        
 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
        No, recibirá este mensaje: "85","14.599871","86.64.162.35","192.168.1.34","SIP","744","Status: 407 Proxy Authentication Required | "
        y posterirormente enviará este: "85","14.599871","86.64.162.35","192.168.1.34","SIP","744","Status: 407 Proxy Authentication Required | "
        
 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
        Paquete = "85","14.599871","86.64.162.35","192.168.1.34","SIP","744","Status: 407 Proxy Authentication Required | "
        contiene este campo: Proxy-Authorization: Digest username="grex", realm="ekiga.net", nonce="45a439f6ba5f681cd945fb7c40529fd1e0f28a81", uri="sip:500@ekiga.net", algorithm=md5, response="9a5627c14a8a433bd308d2ec54777240"
        
11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
        RTP: Utilizado para la transmisión de información en tiempo real.
        RTPC: Proporciona información de control.
         
 ** ¿Cuál es el tamaño de paquete de los mismos?
        RTP: Frame 122: 214 bytes on wire (1712 bits), 214 bytes captured (1712 bits)
        RTCP: Frame 122: 214 bytes on wire (1712 bits), 214 bytes captured (1712 bits)
        
 ** ¿Se utilizan bits de padding?
        No, este estará a 0 (Padding: False)
        
 ** ¿Cuál es la periodicidad de los paquetes que se envían?
        Timestamp: 160 bytes = 1280 bits/paquete
        Enviamos a 64000bits/s 1280bits/paquete
        Utilizando lo anterior mandamos 50 paquetes/segundo
        Periodo = 1/50 segundos = 0.02 s

 ** ¿Cuántos bits/segundo estamos enviando?
        64.000bits/s


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
    "Source Address",   "Source Port",  "Destination Address",  "Destination Port", "Payload",  "Packets",  "Lost", "Max Delta (ms)",   "Max Jitter",   "Mean Jitter",  "Status"
    "192.168.1.34",     5014,           "86.64.162.35",         19062,              "h261",     196,        0,      1290.47,            183.09,         153.24,         "Problem"
    "192.168.1.34",     5010,           "86.64.162.35",         12440,              "g711A",    611,        0,      1290.44,            119.63,         42.50,          ""

 ** ¿Cuántos flujos hay? ¿por qué?
        Habrán dos flujos
 
 ** ¿Cuántos paquetes se pierden?
        Ninguno 
 
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
        Primera dirección: 1290.47
        Segunda dirección: 1290.44
        
        Maxima diferencia entre un paquete y la llegada del anterior.
 
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
        Primera dirección: Max = 183.09, Medio = 153.24
        Segunda dirección: Max = 119.63, Medio = 42.50
        
        Determina la variación temporal que experimenta el retardo en una transmisión de paquetes entre los puntos inicial y final de la comunicación.
        Para tener una conversación de calidad deberemos tener un valor pequeño. En este caso no tenemos demasiada calidad ya que si tenemos un jitter de 150 ms de ida y suponemos el mismo de vuelta ya estaríamos cubriendo los 300 ms necesarios para en una conversación de calidad.

 


13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
        Ambos tienen valor 0.00ms
        
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
        No, el numero de secuencia será aleatorio. 
 
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
        Paquete = 247	20.449554	192.168.1.34	86.64.162.35	RTP	214	PT=ITU-T G.711 PCMA, SSRC=0xBF4AFD37, Seq=23421, Time=16320
 
 ** ¿A qué se debe el cambio tan brusco del jitter?
        Se puede observar una reducción del ancho de banda a la mitad y un aumento considerable del valor delta.
        
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
        Si, el tiempo jitter y delta estan relacionados con los paquetes anteriores y siguientes.
        
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
        Tienen una dependencia directa.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.

 ** ¿Cuánto dura la conversación?
        Aproximadamente 15 segundos.
        
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
        SSRC: 0x43306582
        SSRC: 0xBF4AFD37
        Uno para cada flujo de transmisión.
        
        No hay CSRCs.


15. Identifica la trama donde se finaliza la conversación.
        Trama = "941","39.229683","86.64.162.35","192.168.1.34","SIP","581","Status: 200 OK | "
 ** ¿Qué método SIP se utiliza?
        Metodo Bye
 ** ¿En qué trama(s)?
         "924","38.119195","192.168.1.34","86.64.162.35","SIP","799","Request: BYE sip:500@86.64.162.35:5080 | "
         "925","38.362649","192.168.1.34","86.64.162.35","SIP","799","Request: BYE sip:500@86.64.162.35:5080 | "
         "927","38.362673","192.168.1.34","86.64.162.35","SIP","799","Request: BYE sip:500@86.64.162.35:5080 | "
         "933","38.937875","192.168.1.34","86.64.162.35","SIP","799","Request: BYE sip:500@86.64.162.35:5080 | "
         
 ** ¿Por qué crees que se envía varias veces?
        Para asegurarnos la recepción ya que utilizamos un protocolo no fiable(UDP).

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
        Trama = "950","55.694378","192.168.1.34","86.64.162.35","SIP","520","Request: REGISTER sip:ekiga.net  (remove 1 binding) | "
        Para eliminar el binding, cerrar la conexión.
        
 ** ¿En qué trama sucede esto?
         Trama = "950","55.694378","192.168.1.34","86.64.162.35","SIP","520","Request: REGISTER sip:ekiga.net  (remove 1 binding) | "
 
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
        Expires: 0


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
        No es necesario ya que estamos en una red pública.

 ** ¿Son diferentes el registro y la descripción de la sesión?
        No, son similares.

18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
        "Source Address",   "Source Port",  "Destination Address",  "Destination Port", "SSRC",     "Payload",  "Packets",  "Lost", "Max Delta (ms)",   "Max Jitter",   "Mean Jitter",  "Status"
        "212.128.254.136",  5066,           "212.79.111.155",       10126,              2050326378, "g711U",    549,        0,      323.22,             47.44,          36.92,          ""
        "212.79.111.155",   10126,          "212.128.254.136",      5066,               72358357,   "g711U",    560,        0,      50.67,              4.80,           1.42,           ""
        En este caso tendremos dos flujos.
        
 ** ¿Cuál es su periodicidad?
        160 bytes por paquete RTP y 64.000bits/s, período 20 ms

 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
        Primera dirección: Max Jitter = 47.44, Jitter Medio = 36.92, Max Delta = 323.22
        Segunda dirección: Max Jitter = 4.8, Jitter Medio = 1.42, Max Delta = 50.67
        
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
        Si, en la opción "Play Streams".
        
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?
        En nuestro caso "music@iptel.org", una llamada de prueba con música (Call music (sip:music@iptel.org) to listen to a wonderful fado of Anamar).


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
